from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import json

# Set up the WebDriver (example uses Chrome)
driver = webdriver.Chrome()

# Open the webpage
driver.get('https://www.gucci.com/us/en/')

# Wait for the page to fully load (adjust the wait conditions based on your page's content)
WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.TAG_NAME, 'button')))

# Optionally interact with the page to ensure all dynamic content is loaded
# (e.g., scrolling, clicking on buttons to reveal more buttons, etc.)
# Example: Scroll to the bottom of the page to load more content
driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.TAG_NAME, 'button')))

# Function to get visible text from an element, including nested elements
def get_visible_text(element):
    return ''.join(element.text.split()).strip()

# Find all buttons
buttons = driver.find_elements(By.TAG_NAME, "button")
buttons += driver.find_elements(By.CSS_SELECTOR, "input[type='button']")
buttons += driver.find_elements(By.CSS_SELECTOR, "input[type='submit']")

# JavaScript to detect event listeners and visible text, including inline handlers
script = """
function getEventListeners(element) {
    var listeners = [];
    var allEvents = Object.keys(window).filter(function(k) { return k.indexOf("on") === 0 });
    allEvents.forEach(function(eventName) {
        var listenersForElement = getEventListenersForElement(element, eventName.slice(2));
        if (listenersForElement.length > 0) {
            listeners.push({event: eventName.slice(2), listeners: listenersForElement});
        }
    });
    return listeners;
}

function getEventListenersForElement(element, eventName) {
    var listeners = [];
    if (typeof jQuery !== 'undefined') {
        var events = jQuery._data(element, "events");
        if (events && events[eventName]) {
            events[eventName].forEach(function(event) {
                listeners.push(event.handler.toString());
            });
        }
    }
    if (element["on" + eventName]) {
        listeners.push(element["on" + eventName].toString());
    }
    return listeners;
}

// Function to check for inline event handlers
function getInlineEventHandlers(element) {
    var inlineHandlers = [];
    var allEvents = Object.keys(window).filter(function(k) { return k.indexOf("on") === 0 });
    allEvents.forEach(function(event) {
        if (element.hasAttribute(event)) {
            inlineHandlers.push({event: event.slice(2), handler: element.getAttribute(event)});
        }
    });
    return inlineHandlers;
}

// Function to get visible text from an element, including nested elements
function getVisibleText(element) {
    return Array.from(element.childNodes)
        .filter(node => node.nodeType === Node.TEXT_NODE || node.nodeType === Node.ELEMENT_NODE)
        .map(node => node.nodeType === Node.TEXT_NODE ? node.nodeValue : node.innerText)
        .join(' ')
        .trim();
}

var elements = arguments[0];
var result = [];
elements.forEach(function(element) {
    var elementInfo = {
        tagName: element.tagName,
        outerHTML: element.outerHTML,
        visibleText: getVisibleText(element),
        listeners: getEventListeners(element),
        inlineHandlers: getInlineEventHandlers(element)
    };
    result.push(elementInfo);
});
return result;
"""

# Get event listeners and visible text for each button
button_elements = [button for button in buttons]
button_info = driver.execute_script(script, button_elements)

# Print out the information
print(json.dumps(button_info, indent=4))

# Close the WebDriver
driver.quit()

